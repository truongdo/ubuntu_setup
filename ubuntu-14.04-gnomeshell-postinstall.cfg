#
# Configuration file
# for the script https://github.com/nicolargo/ubuntupostinstall
#
# Ubuntu version: 14.05
# UI: Gnome Shell
#

# Actions to be executed before all the others steps
# Use && separator if there is more than 1 action
[preactions]
action_dummy = dpkg -l > /tmp/pkg-before.txt


# The repos section
# ppa_xxx = ppa:ppauser/ppaname > Add the ppa to the system
# pkg_xxx = pkglist             > Add the package list to the system
# url_xxx = reposurl            > Add the repository URL to the system
# key_xxx = key                 > Add the repository key to the system
[repos]
# Gnome 3/Shell
# ppa_gnome3 = ppa:gnome3-team/gnome3
# ppa_gnome3_plugins = ppa:webupd8team/gnome3
# pkg_gnome3 = gnome-shell ubuntu-gnome-desktop gnome-tweak-tool gnome-documents conky-all ttf-ubuntu-font-family
# pkg_gnome3_plugins = `apt-cache search gnome-shell-extension | awk '{ print $1 }' | xargs`
# pkg_gnome3_mgse = mgse-bottompanel mgse-menu mgse-windowlist


# The best terminal in the world
pkg_terminator = terminator

# Spotify
# ppa_spotify = "deb http://repository.spotify.com stable non-free"
# pkg_spotify = spotify-client-qt

# The packages section
# pkgname = pkglist > Add the pkglist to the system
[packages]
ubuntu-restrictive = ubuntu-restricted-extras
development = build-essential vim subversion git git-core rabbitvcs-nautilus anjuta geany ipython python-docutils python-pip python-virtualenv ctags curl
system = terminator gparted zsh 
web = ttf-mscorefonts-installer nautilus-dropbox

# The . files section
# Download and install . file on the $HOME folder
[dotfiles]
bashrc = https://raw.github.com/nicolargo/dotfiles/master/bashrc
bashrc_prompt = https://raw.github.com/nicolargo/dotfiles/master/_bashrc.d/bashrc_prompt
bashrc_aliases = https://raw.github.com/nicolargo/dotfiles/master/_bashrc.d/bashrc_aliases

# Actions to be executed after all the others steps
# Use && separator if there is more than 1 action
[postactions]
#action_vimcustom = wget https://raw.github.com/vgod/vimrc/master/auto-install.sh && chmod a+x auto-install.sh && ./auto-install.sh && rm -f ./auto-install.sh
action_pyvirtualenvwrapper = pip install virtualenvwrapper
action_vimcustom = git clone git://github.com/amix/vimrc.git ~/.vim_runtime && sh ~/.vim_runtime/install_awesome_vimrc.sh && curl http://vim.sourceforge.net/scripts/download_script.php?src_id=4431 >> ~/.vim_runtime/my_configs.vim
action_zsh = wget --no-check-certificate http://install.ohmyz.sh -O - | sh && chsh -s /bin/zsh
action_pathogen = mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
action_setright = chown -R LOCAL_USER $HOME/.vimrc $HOME/.vim ~/.vim_runtime  ~/.vim/autoload ~/.vim/bundle 
action_dummy = dpkg -l > /tmp/pkg-after.txt
